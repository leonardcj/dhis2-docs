<?xml version='1.0' encoding='UTF-8'?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd"
          xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xl="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:mth="http://www.w3.org/1998/Math/MathML"
         xmlns:db="http://docbook.org/ns/docbook">
  <title>[Review ongoing]Program Indicators</title>
  <para>This chapter covers how to configure and use program indicators. Program indicators are expressions based on data elements and attributes of tracked entities, which can be used to calculate values based on a formula.</para>
  <section>
    <title>Overview</title>
    <para>The purpose of program indicators is to provide a way to produce calculated values based
      on data elements and attributes. Program indicators have an aggregation type, an expression
      and a filter, which in combination determines how the indicator will be evaluated.</para>
  </section>
  <section>
    <title>Setup</title>
    <para>Program indicators can be managed from the &quot;Programs and Attributes&quot; app. Once in the app,
      navigate to Programs. A program indicator belongs to exactly one program, so click on the
      program for which you want to create an indicator and from the context menu navigate to &quot;View
      program indicators&quot;. This will open the list of existing indicators, if any, for this
      program.</para>
    <para>To <emphasis role="bold">add</emphasis> an indicator, click the &quot;Add new&quot; button in the
      top right corner. This will open the new indicator screen. Provide a name, short name, code,
      description, value type, expression and filter for the indicator.</para>
    <para>To <emphasis role="bold">edit</emphasis> an indicator, click on the relevant indicator in
      the list to open the context menu and click &quot;Edit&quot;. This will open the edit indicator screen,
      where you can modify the relevant values.</para>
    <para>To <emphasis role="bold">remove</emphasis> an  indicator, click on the relevant indicator
      in the list to open the context menu and click &quot;Remove&quot;. Click &quot;OK&quot; in the confirmation dialog
      to remove the indicator.</para>
    <screenshot>
      <title>Program indicator list with context menu</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="resources/images/program_indicator/program-indicator-list.png" format="PNG" align="center" width="60%"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </section>
  <section>
    <title>Indicator evaluation</title>
    <para>Program indicators are evaluated based on the assigned aggregation type, expression and filter. The
      order of evaluation is as follows:</para>
    <orderedlist>
      <listitem>
        <para>The <emphasis role="italic">filter</emphasis> will filter the events which become part
          of the evaluation / aggregation routine.</para>
      </listitem>
      <listitem>
        <para>The <emphasis role="italic">expression</emphasis> will be evaluated per event.</para>
      </listitem>
      <listitem>
        <para>All evaluated expression values will be <emphasis role="italic">aggregated</emphasis>
          according to the aggregation type of the program indicator.</para>
      </listitem>
    </orderedlist>
    <section>
      <title>Aggregation type</title>
      <para>The aggregation type determines how the program indicator
        will be aggregated. The following aggregation types are available:</para>
      <itemizedlist>
        <listitem>
          <para>Average</para>
        </listitem>
        <listitem>
          <para>Sum</para>
        </listitem>
        <listitem>
          <para>Count</para>
        </listitem>
        <listitem>
          <para>Standard Deviation</para>
        </listitem>
        <listitem>
          <para>Variance</para>
        </listitem>
        <listitem>
          <para>Min</para>
        </listitem>
        <listitem>
          <para>Max</para>
        </listitem>
        <listitem>
          <para>Custom</para>
        </listitem>
      </itemizedlist>
      <section>
        <title>Custom aggregation type</title>
        <para>The "custom" aggregation type is special, as it allows you to specify the aggregation
          type in-line in the expression. All other aggregation types are applied to the entire
          expression.</para>
        <para>Using the "custom" aggregation type might lead to an exception of the order of
          evaluation described above where individual parts of the expression can be evaluated and
          aggregated, as opposed to the entire expressio being evaluated prior to aggregation.</para>
        <para>The following aggregation type operators can be used within expressions: sum, count,
          stddev, variance, min, max.</para>
      </section>
    </section>
    <section>
      <title>Expression</title>
      <para>The expression defines how the indicator is being calculated. The expression can contain
        references to various entities which will be substituted with a related values when the
        indicator is calculated:<itemizedlist>
          <listitem>
            <para>Data elements: Will be substituted with the value of the data element for the time
              period and organisation unit for which the calculation is done. Refers to both program
              stage and data element.</para>
          </listitem>
          <listitem>
            <para>Attributes: Will be substituted with the value of the attribute for the person /
              tracked entity for which the calculation is done.</para>
          </listitem>
          <listitem>
            <para>Variables: Will be substituted with special values linked to the program,
              including incident date and date of enrollment for the person, current date and count
              of values in the expression for the time period and organisation unit for which the
              calculation is done.</para>
          </listitem>
          <listitem>
            <para>Constants: Will be substituted with the value of the constant.</para>
          </listitem>
        </itemizedlist></para>
      <para>The expression is a mathematical expression that can contain operators which include
      multiply, divide, plus and minus. The expression will be evaluated <emphasis role="italic">per event</emphasis>, then aggregated according to its aggregation type.</para>
      <screenshot>
        <title>Program indicator list with context menu</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/images/program_indicator/program-indicator-expression.png" format="PNG" align="center" width="60%"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <para>An example expression that includes both attributes, data elements and constants looks like
      this:<screen>(A{GPkGfbmArby} + #{mCXR7u4kNBW.NFkjsNiQ9PH}) * C{bCqvfPR02Im}</screen></para>
      <para>An example expression which uses the custom aggregation type and hence can use inline
      aggregation types looks like
      this:<screen>(sum(#{mCXR7u4kNBW.K0A4BauXJDl} * #{mCXR7u4kNBW.NFkjsNiQ9PH}) / sum(#{mCXR7u4kNBW.NFkjsNiQ9PH})) * 100</screen></para>
      <para>Notice how the "sum" aggregation operator is used inside the expression itself.</para>
    </section>
    <section>
      <title>Filter</title>
      <para>The filter is applied to events and filters the data
      source used for the calculation of the indicator. I.e. the filter is applied to the set of
      events before the indicator expression is being evaluated. The filter must evaluate to either
      true or false. It filter is applied to each individual event. If the filter evaluates to true
      then the event is included later in the expression evaluation, if not it is ignored. The
      filter can, in a similar way as expressions, contain references to data elements, attributes
      and constants.</para>
      <para>The indicator filter can in addition use logical operators including the
        following:</para>
      <table frame="all">
        <title>Operators</title>
        <tgroup cols="2">
          <colspec colnum="1" colname="c1" colwidth="1*"/>
          <colspec colnum="2" colname="c2" colwidth="5.11*"/>
          <thead>
            <row>
              <entry>Operator</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>and</entry>
              <entry>Logical AND</entry>
            </row>
            <row>
              <entry>or</entry>
              <entry>Logical OR</entry>
            </row>
            <row>
              <entry>==</entry>
              <entry>Equal to</entry>
            </row>
            <row>
              <entry>!=</entry>
              <entry>Not equal to</entry>
            </row>
            <row>
              <entry>&lt;</entry>
              <entry>Less than</entry>
            </row>
            <row>
              <entry>&lt;=</entry>
              <entry>Less than or equal to</entry>
            </row>
            <row>
              <entry>&gt;</entry>
              <entry>Greater than</entry>
            </row>
            <row>
              <entry>&gt;=</entry>
              <entry>Greater than or equal to</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>These operators can be used to form logical expressions which ultimately evaluate to either
        true or false. For example. one can assert that multiple data elements must be a specific value, or
        that specific attributes must have numerical values less or greater than a constant.</para>
      <screenshot>
        <title>Program indicator list with context menu</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="resources/images/program_indicator/program-indicator-filter.png" format="PNG" align="center" width="60%"/>
          </imageobject>
        </mediaobject>
      </screenshot>
      <para>You can switch between data elements, attributes, variables and constants by using the
      tabs. You can include such items into expressions and filters by double-clicking in the list.
      The buttons below the expression area can be used to insert operators.</para>
      <para>An example filter that uses both attributes and data elements looks like
      this:<screen>A{cejWyOfXge6} == &apos;Female&apos; and #{A03MvHHogjR.a3kGcGDCuk6} &lt;= 2</screen></para>
      <tip>
        <para>DHIS2 is using the JEXL library
      for evaluating expressions which supports additional syntax beyond what is covered in this
      documentation. See the reference at the <link xl:href="http://commons.apache.org/proper/commons-jexl/reference/syntax.html">project home page</link> to learn how you can create more sophisticated expressions</para>
      </tip>
    </section>
    <section>
      <title>Functions</title>
      <para>The indicator expression and filter support a range of functions. The functions can be
        applied to data elements and attributes:</para>
      <table frame="all">
        <title>Functions</title>
        <tgroup cols="3">
          <colspec colnum="1" colname="c1" colwidth="1*"/>
          <colspec colnum="2" colname="newCol2" colwidth="2*"/>
          <colspec colnum="3" colname="c2" colwidth="3.61*"/>
          <thead>
            <row>
              <entry>Function</entry>
              <entry>Arguments</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>d2:daysBetween</entry>
              <entry>(date, date)</entry>
              <entry>Produces the number of days between two data elements/attributes of type date. The static date format is &apos;yyyy-MM-dd&apos;.</entry>
            </row>
            <row>
              <entry>d2:condition</entry>
              <entry>(boolean-expr, true-val, false-val)</entry>
              <entry>Evaluates the conditional expression and if true returns the true value, if false returns the false value. The conditional expression must be quoted.</entry>
            </row>
            <row>
              <entry>d2:zing</entry>
              <entry>(number)</entry>
              <entry>Evaluates the data element/attribute of type number to zero if the value is negative, otherwise to the value itself.</entry>
            </row>
            <row>
              <entry>d2:oizp</entry>
              <entry>(number)</entry>
              <entry>Evaluates the data element/attribute of type number to one if the value is zero or positive, otherwise to zero. </entry>
            </row>
            <row>
              <entry>d2:zpvc</entry>
              <entry>(object, [,object, object,...])</entry>
              <entry>Returns the number of numeric zero and positive values among the given object arguments. Can be provided any number of arguments.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>An example expression that uses the &quot;zing&quot; and &quot;oizp&quot; functions looks like
        this:<screen>d2:zing(A{GPkGfbmArby}) + d2:oizp(#{mCXR7u4kNBW.NFkjsNiQ9PH}))</screen></para>
      <para>An example expression that uses the &quot;daysBetween&quot; function looks like
        this:<screen>d2:daysBetween(#{mCXR7u4kNBW.k8ja2Aif1Ae},&apos;2015-06-01&apos;)</screen></para>
      <para>An example expression that uses the &quot;condition&quot; function looks like
        this:<screen>d2:condition(&apos;#{mCXR7u4kNBW.NFkjsNiQ9PH} &gt; 100&apos;,150,50)</screen></para>
      <para>An example expression that uses the &quot;zpvc&quot; function looks like
        this:<screen>d2:zpvc(A{GPkGfbmArby}),#{mCXR7u4kNBW.NFkjsNiQ9PH}),4,-1)</screen></para>
    </section>
    <section>
      <title>Variables</title>
      <para>The indicator expression and filter support a range of variables:</para>
      <table frame="all">
        <title>Variables</title>
        <tgroup cols="2">
          <colspec colnum="1" colname="c1" colwidth="1*"/>
          <colspec colnum="2" colname="c2" colwidth="3.55*"/>
          <thead>
            <row>
              <entry>Variable</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>event_date</entry>
              <entry>The date of when the event took place.</entry>
            </row>
            <row>
              <entry>due_date</entry>
              <entry>The date of when an event is due.</entry>
            </row>
            <row>
              <entry>incident_date</entry>
              <entry>The date of the incidence of the event.</entry>
            </row>
            <row>
              <entry>enrollment_date</entry>
              <entry>The date of when the tracked entity instance was enrolled in the program.</entry>
            </row>
            <row>
              <entry>current_date</entry>
              <entry>The current date.</entry>
            </row>
            <row>
              <entry>value_count</entry>
              <entry>The number of non-null values in the expression part of the event.</entry>
            </row>
            <row>
              <entry>zero_pos_value_count</entry>
              <entry>The number of numeric positive values in the expression part of the event.</entry>
            </row>
            <row>
              <entry>event_count</entry>
              <entry>The count of events (useful in combination with filters).</entry>
            </row>
            <row>
              <entry>enrollment_count</entry>
              <entry>The count of enrollments (useful in combination with filters).</entry>
            </row>
            <row>
              <entry>tei_count</entry>
              <entry>The count of tracked entity instances (useful in combination with filters).</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      <para>An example expression that uses the &quot;value count&quot; variable looks like
        this:<screen>(#{A03MvHHogjR.a3kGcGDCuk6} + #{A03MvHHogjR.wQLfBvPrXqq}) / V{value_count}</screen></para>
      <para>An example expression that uses the "event_date" and "incident_date" variables looks
        like this:<screen>d2:daysBetween(V{incident_date},V{event_date})</screen>
      </para>
    </section>
  </section>
</chapter>
